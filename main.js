/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/templates/default.json
var require_default = __commonJS({
  "src/templates/default.json"(exports, module2) {
    module2.exports = {
      id: "default",
      name: "\u9ED8\u8BA4\u6A21\u677F",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.02em; line-height: 1.5;",
            content: "font-weight: bold; color: #2c3e50;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #34495e;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; line-height: 1.5;",
            content: "font-weight: bold; color: #3d566e;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #47637f;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #f8f8f8; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #eee; box-shadow: 0 2px 4px rgba(0,0,0,0.05); width: 100%;",
          inline: "background: #f8f8f8; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #eee;"
        },
        quote: "border-left: 4px solid #e0e0e0; border-radius: 6px; padding: 16px 20px; background: #f6f8fa; margin: 0.8em 0; color: #6a737d; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #e0e0e0; text-decoration: none; border-bottom: 1px solid #e0e0e0;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #e1e4e8;",
          header: "background: #f6f8fa; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #e1e4e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #f0f0f0; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/minimal.json
var require_minimal = __commonJS({
  "src/templates/minimal.json"(exports, module2) {
    module2.exports = {
      id: "minimal",
      name: "\u6781\u7B80\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(0,0,0,0.1);",
            content: "font-weight: bold; color: #000000;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #262626;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; line-height: 1.5;",
            content: "font-weight: bold; color: #404040;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #595959;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #fafafa; padding: 0.5em 1em 1em; border-radius: 4px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #f0f0f0; width: 100%;",
          inline: "background: #fafafa; padding: 2px 6px; border-radius: 2px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #f0f0f0;"
        },
        quote: "border-left: 2px solid #262626; padding: 16px 20px; background: #fafafa; margin: 0.8em 0; color: #404040; font-style: italic; font-size: 1em; word-wrap: break-word;",
        link: "color: #262626; text-decoration: none; border-bottom: 1px solid #262626;",
        emphasis: {
          strong: "font-weight: bold; color: #262626;",
          em: "font-style: italic; color: #404040;",
          del: "text-decoration: line-through; color: #595959;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #f0f0f0;",
          header: "background: #fafafa; font-weight: bold; color: #4a4a4a; border-bottom: 1px solid #f0f0f0; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #f0f0f0; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/scarlet.json
var require_scarlet = __commonJS({
  "src/templates/scarlet.json"(exports, module2) {
    module2.exports = {
      id: "scarlet",
      name: "\u7EA2\u7EEF\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.02em; line-height: 1.5;",
            content: "font-weight: bold; color: #DC143C;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.01em; line-height: 1.5; border-bottom: 1px solid rgba(220,20,60,0.1);",
            content: "font-weight: bold; color: #E34234;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; line-height: 1.5;",
            content: "font-weight: bold; color: #E65D52;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #E87A70;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #fff8f8; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #ffe8e8; box-shadow: 0 2px 4px rgba(220,20,60,0.05); width: 100%;",
          inline: "background: #fff8f8; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #ffe8e8;"
        },
        quote: "border-left: 4px solid #DC143C; border-radius: 6px; padding: 16px 20px; background: #fff8f8; margin: 0.8em 0; color: #E34234; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #DC143C; text-decoration: none; border-bottom: 1px solid #DC143C; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #ffe8e8;",
          header: "background: #fff8f8; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #ffe8e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #ffe8e8; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/orange.json
var require_orange = __commonJS({
  "src/templates/orange.json"(exports, module2) {
    module2.exports = {
      id: "orange",
      name: "\u6A59\u5FC3\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5;",
            content: "font-weight: bold; color: #d64b3b;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; border-bottom: 2px solid #ef7060; line-height: 1.2;",
            content: "display: inline-block; font-weight: bold; background: #ef7060; color: #ffffff; padding: 1px 4px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;",
            after: "display: inline-block; content: ' '; vertical-align: bottom; border-bottom: 28px solid #fff5f4; border-right: 20px solid transparent;"
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #f18070;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 14px; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #f39080;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #fff8f7; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #ffe8e6; box-shadow: 0 2px 4px rgba(239,112,96,0.05); width: 100%;",
          inline: "background: #fff8f7; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #ffe8e6;"
        },
        quote: "border-left: 4px solid #ef7060; border-radius: 6px; padding: 16px 20px; background: #fff5f4; margin: 0.8em 0; color: #d64b3b; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #ef7060; text-decoration: none; border-bottom: 1px solid #ef7060; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #ffe8e6;",
          header: "background: #fff8f7; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #ffe8e6; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #ffe8e6; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/elegant.json
var require_elegant = __commonJS({
  "src/templates/elegant.json"(exports, module2) {
    module2.exports = {
      id: "elegant",
      name: "\u4F18\u96C5\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5;",
            content: "font-weight: bold; color: #553C9A;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; border-bottom: 2px solid #9F7AEA; line-height: 1.2;",
            content: "display: inline-block; font-weight: bold; background: #9F7AEA; color: #ffffff; padding: 1px 4px; border-top-right-radius: 3px; border-top-left-radius: 3px; margin-right: 3px;",
            after: "display: inline-block; content: ' '; vertical-align: bottom; border-bottom: 28px solid #f5f3ff; border-right: 20px solid transparent;"
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #805AD5;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 14px; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #805AD5;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #f8f8f8; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #eee; box-shadow: 0 2px 4px rgba(0,0,0,0.05); width: 100%;",
          inline: "background: #f8f8f8; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #eee;"
        },
        quote: "border-left: 4px solid #9F7AEA; border-radius: 6px; padding: 16px 20px; background: #f5f3ff; margin: 0.8em 0; color: #6B46C1; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #805AD5; text-decoration: none; border-bottom: 1px solid #9F7AEA; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #e1e4e8;",
          header: "background: #f6f8fa; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #e1e4e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #f0f0f0; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/dark.json
var require_dark = __commonJS({
  "src/templates/dark.json"(exports, module2) {
    module2.exports = {
      id: "dark",
      name: "\u6DF1\u8272\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5;",
            content: "font-weight: bold; color: #1E90FF;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; border-left: 4px solid #1E90FF; padding-left: 12px; line-height: 1.5;",
            content: "font-weight: bold; color: #3B9DFF;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #57A9FF;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #74B6FF;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #F8FBFF; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #E6F0FF; box-shadow: 0 2px 4px rgba(30,144,255,0.05); width: 100%;",
          inline: "background: #F8FBFF; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #E6F0FF;"
        },
        quote: "border-left: 4px solid #1E90FF; border-radius: 6px; padding: 16px 20px; background: #F5F9FF; margin: 0.8em 0; color: #3B9DFF; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #1E90FF; text-decoration: none; border-bottom: 1px solid #1E90FF; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #E6F0FF;",
          header: "background: #F8FBFF; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #E6F0FF; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #E6F0FF; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/academic.json
var require_academic = __commonJS({
  "src/templates/academic.json"(exports, module2) {
    module2.exports = {
      id: "academic",
      name: "\u5B66\u672F\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5;",
            content: "font-weight: bold; color: #5D4037;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; border-left: 4px solid #8D6E63; padding-left: 12px; line-height: 1.5;",
            content: "font-weight: bold; color: #6D4C41;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #795548;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em; line-height: 1.5;",
            content: "font-weight: bold; color: #8D6E63;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        quote: "border-left: 4px solid #8D6E63; border-radius: 6px; padding: 16px 20px; background: #EFEBE9; margin: 0.8em 0; color: #5D4037; font-style: italic; font-size: 1em; word-wrap: break-word;",
        link: "color: #795548; text-decoration: none; border-bottom: 1px solid #8D6E63; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: 600; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #f8f8f8; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #eee; box-shadow: 0 2px 4px rgba(0,0,0,0.05); width: 100%;",
          inline: "background: #f8f8f8; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #eee;"
        },
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #e1e4e8;",
          header: "background: #f6f8fa; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #e1e4e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #f0f0f0; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/yeban.json
var require_yeban = __commonJS({
  "src/templates/yeban.json"(exports, module2) {
    module2.exports = {
      id: "yeban",
      name: "\u591C\u534A\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5; text-align: center;",
            content: "font-weight: bold; color: #666b8f; display: inline-block; border-bottom: 1px solid #666b8f;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(122,125,160,0.2);",
            content: "font-weight: bold; color: #ffffff; background: #7a7da0; padding: 1px 4px; border-radius: 3px;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #7a7da0; padding: 1px 1px;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em;",
            content: "font-weight: bold; color: #7a7da0;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #f8f9fc; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #eef0f7; box-shadow: 0 2px 4px rgba(122,125,160,0.05); width: 100%;",
          inline: "background: #f8f9fc; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #eef0f7;"
        },
        quote: "border-left: 4px solid #7a7da0; border-radius: 6px; padding: 16px 20px; background: #f8f9fc; margin: 0.8em 0; color: #666b8f; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #7a7da0; text-decoration: none; border-bottom: 1px solid #7a7da0; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #e1e4e8;",
          header: "background: #f8f9fc; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #e1e4e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #eef0f7; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/yeban-orange.json
var require_yeban_orange = __commonJS({
  "src/templates/yeban-orange.json"(exports, module2) {
    module2.exports = {
      id: "yeban-orange",
      name: "\u591C\u534A\u6A59\u5FC3",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5; text-align: center;",
            content: "font-weight: bold; color: #ef7060; display: inline-block; border-bottom: 1px solid #ef7060;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(239,112,96,0.2);",
            content: "font-weight: bold; color: #ffffff; background: #ef7060; padding: 1px 4px; border-radius: 3px;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #f18070; padding: 1px 1px;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em;",
            content: "font-weight: bold; color: #f39080;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #fff8f7; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #ffe8e6; box-shadow: 0 2px 4px rgba(239,112,96,0.05); width: 100%;",
          inline: "background: #fff8f7; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #ffe8e6;"
        },
        quote: "border-left: 4px solid #ef7060; border-radius: 6px; padding: 16px 20px; background: #fff8f7; margin: 0.8em 0; color: #d64b3b; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #ef7060; text-decoration: none; border-bottom: 1px solid #ef7060; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #ffe8e6;",
          header: "background: #fff8f7; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #ffe8e6; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #ffe8e6; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/yeban-scarlet.json
var require_yeban_scarlet = __commonJS({
  "src/templates/yeban-scarlet.json"(exports, module2) {
    module2.exports = {
      id: "yeban-scarlet",
      name: "\u591C\u534A\u7EA2\u7EEF",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5; text-align: center;",
            content: "font-weight: bold; color: #D64B3B; display: inline-block; border-bottom: 1px solid #D64B3B;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(230,93,82,0.2);",
            content: "font-weight: bold; color: #ffffff; background: #E65D52; padding: 1px 4px; border-radius: 3px;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #E87A70; padding: 1px 1px;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em;",
            content: "font-weight: bold; color: #EA968E;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #fff8f8; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #ffe8e8; box-shadow: 0 2px 4px rgba(230,93,82,0.05); width: 100%;",
          inline: "background: #fff8f8; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #ffe8e8;"
        },
        quote: "border-left: 4px solid #E65D52; border-radius: 6px; padding: 16px 20px; background: #fff8f8; margin: 0.8em 0; color: #D64B3B; font-style: italic; font-size: 1em; word-wrap: break-word;",
        link: "color: #E65D52; text-decoration: none; border-bottom: 1px solid #E65D52; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #ffe8e8;",
          header: "background: #fff8f8; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #ffe8e8; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #ffe8e8; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/yeban-navy.json
var require_yeban_navy = __commonJS({
  "src/templates/yeban-navy.json"(exports, module2) {
    module2.exports = {
      id: "yeban-navy",
      name: "\u591C\u534A\u6DF1\u84DD",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5; text-align: center;",
            content: "font-weight: bold; color: #1E90FF; display: inline-block; border-bottom: 1px solid #1E90FF;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(30,144,255,0.2);",
            content: "font-weight: bold; color: #ffffff; background: #1E90FF; padding: 1px 4px; border-radius: 3px;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #3B9DFF; padding: 1px 1px;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em;",
            content: "font-weight: bold; color: #57A9FF;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #F8FBFF; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #E6F0FF; box-shadow: 0 2px 4px rgba(0,0,128,0.05); width: 100%;",
          inline: "background: #F8FBFF; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #E6F0FF;"
        },
        quote: "border-left: 4px solid #000080; border-radius: 6px; padding: 16px 20px; background: #F8FBFF; margin: 0.8em 0; color: #1E3799; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #000080; text-decoration: none; border-bottom: 1px solid #000080; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #E6F0FF;",
          header: "background: #F8FBFF; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #E6F0FF; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #E6F0FF; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/templates/darkgreen.json
var require_darkgreen = __commonJS({
  "src/templates/darkgreen.json"(exports, module2) {
    module2.exports = {
      id: "darkgreen",
      name: "\u58A8\u7EFF\u4E3B\u9898",
      styles: {
        container: "",
        title: {
          h1: {
            base: "margin: 32px 0 0; font-size: 2em; letter-spacing: -0.03em; line-height: 1.5; text-align: center;",
            content: "font-weight: bold; color: #2C5530; display: inline-block; border-bottom: 1px solid #2C5530;",
            after: ""
          },
          h2: {
            base: "margin: 28px 0 0; font-size: 1.5em; letter-spacing: -0.02em; line-height: 1.5; border-bottom: 1px solid rgba(46,139,87,0.2);",
            content: "font-weight: bold; color: #ffffff; background: #2E8B57; padding: 1px 4px; border-radius: 3px;",
            after: ""
          },
          h3: {
            base: "margin: 24px 0 0; font-size: 1.25em; letter-spacing: -0.01em; line-height: 1.5;",
            content: "font-weight: bold; color: #3CB371; padding: 1px 1px;",
            after: ""
          },
          base: {
            base: "margin: 20px 0 0; font-size: 1em;",
            content: "font-weight: bold; color: #66CDAA;",
            after: ""
          }
        },
        paragraph: "line-height: 1.8; margin-bottom: 1.2em; font-size: 1em; color: #4a4a4a;",
        list: {
          container: "padding-left: 32px; margin-bottom: 1.2em; color: #4a4a4a;",
          item: "margin-bottom: 0.6em; font-size: 1em; color: #4a4a4a; line-height: 1.8;",
          taskList: "list-style: none; margin-left: -24px; font-size: 1em; color: #4a4a4a; line-height: 1.8;"
        },
        code: {
          block: "background: #f4faf7; padding: 0.5em 1em 1em; border-radius: 8px; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; line-height: 1.6; white-space: pre; overflow-x: auto; word-wrap: normal; color: #333; margin: 1.2em 0; border: 1px solid #e6f3ed; box-shadow: 0 2px 4px rgba(15,120,80,0.05); width: 100%;",
          inline: "background: #f4faf7; padding: 2px 6px; border-radius: 4px; color: #333; font-size: 14px; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; border: 1px solid #e6f3ed;"
        },
        quote: "border-left: 4px solid #1a9d6a; border-radius: 6px; padding: 16px 20px; background: #f4faf7; margin: 0.8em 0; color: #159461; font-style: italic; font-size: 1em; word-wrap: break-word;",
        image: "max-width: 100%; height: auto; margin: 1em auto; display: block;",
        link: "color: #159461; text-decoration: none; border-bottom: 1px solid #1a9d6a; transition: all 0.2s ease;",
        emphasis: {
          strong: "font-weight: bold; color: #4a4a4a;",
          em: "font-style: italic; color: #4a4a4a;",
          del: "text-decoration: line-through; color: #4a4a4a;"
        },
        table: {
          container: "width: 100%; margin: 1em 0; border-collapse: collapse; border: 1px solid #e6f3ed;",
          header: "background: #f4faf7; font-weight: bold; color: #4a4a4a; border-bottom: 2px solid #e6f3ed; font-size: 1em;",
          cell: "border: 1px solid #f0f0f0; padding: 8px; color: #4a4a4a; font-size: 1em;"
        },
        hr: "border: none; border-top: 1px solid #e6f3ed; margin: 20px 0;",
        footnote: {
          ref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;",
          backref: "color: #e0e0e0; text-decoration: none; font-size: 0.9em;"
        }
      }
    };
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MPPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian3 = require("obsidian");

// src/view.ts
var import_obsidian2 = require("obsidian");

// src/converter.ts
var MPConverter = class {
  static initialize(app) {
    this.app = app;
  }
  static formatContent(element) {
    const section = document.createElement("section");
    section.className = "mp-content-section";
    while (element.firstChild) {
      section.appendChild(element.firstChild);
    }
    element.appendChild(section);
    this.processElements(section);
  }
  static processElements(container) {
    if (!container)
      return;
    container.querySelectorAll("strong, em").forEach((el) => {
      el.style.display = "inline";
    });
    container.querySelectorAll("a").forEach((el) => {
      el.style.color = "#576b95";
      el.style.textDecoration = "none";
    });
    container.querySelectorAll("table").forEach((el) => {
      if (el === container.closest("table"))
        return;
      el.style.borderCollapse = "collapse";
      el.style.margin = "1em 0";
      el.style.width = "100%";
    });
    container.querySelectorAll("th, td").forEach((el) => {
      if (el === container.closest("td"))
        return;
      el.style.border = "1px solid #dfdfdf";
      el.style.padding = "8px";
    });
    container.querySelectorAll("hr").forEach((el) => {
      el.style.border = "none";
      el.style.borderTop = "1px solid #dfdfdf";
      el.style.margin = "20px 0";
    });
    container.querySelectorAll("del").forEach((el) => {
      el.style.textDecoration = "line-through";
    });
    container.querySelectorAll(".task-list-item").forEach((el) => {
      el.style.listStyle = "none";
      const checkbox = el.querySelector('input[type="checkbox"]');
      if (checkbox) {
        checkbox.style.marginRight = "6px";
      }
    });
    container.querySelectorAll(".footnote-ref, .footnote-backref").forEach((el) => {
      el.style.color = "#576b95";
      el.style.textDecoration = "none";
    });
    container.querySelectorAll("pre code").forEach((el) => {
      const pre = el.parentElement;
      if (pre) {
        const dots = document.createElement("div");
        dots.style.cssText = `
                    margin: 8px 0 12px 0;
                    display: flex;
                    gap: 6px;
                `;
        const colors = ["#ff5f56", "#ffbd2e", "#27c93f"];
        colors.forEach((color) => {
          const dot = document.createElement("span");
          dot.style.cssText = `
                        width: 12px;
                        height: 12px;
                        border-radius: 50%;
                        background-color: ${color};
                    `;
          dots.appendChild(dot);
        });
        pre.insertBefore(dots, pre.firstChild);
        pre.style.paddingTop = "32px";
        const copyButton = pre.querySelector(".copy-code-button");
        if (copyButton) {
          copyButton.remove();
        }
      }
    });
    container.querySelectorAll("span.internal-embed[alt][src]").forEach((el) => __async(this, null, function* () {
      var _a;
      const originalSpan = el;
      const src = originalSpan.getAttribute("src");
      const alt = originalSpan.getAttribute("alt");
      if (!src)
        return;
      try {
        const linktext = src.split("|")[0];
        const file = this.app.metadataCache.getFirstLinkpathDest(linktext, "");
        if (file) {
          const absolutePath = this.app.vault.adapter.getResourcePath(file.path);
          const newImg = document.createElement("img");
          newImg.src = absolutePath;
          if (alt)
            newImg.alt = alt;
          newImg.style.maxWidth = "100%";
          newImg.style.height = "auto";
          newImg.style.display = "block";
          newImg.style.margin = "1em auto";
          (_a = originalSpan.parentNode) == null ? void 0 : _a.replaceChild(newImg, originalSpan);
        }
      } catch (error) {
        console.error("\u56FE\u7247\u5904\u7406\u5931\u8D25:", error);
      }
    }));
    container.querySelectorAll("blockquote").forEach((el) => {
      el.querySelectorAll("p").forEach((p) => {
        p.style.margin = "0";
        p.style.padding = "0";
        p.style.lineHeight = "inherit";
      });
    });
  }
};

// src/copyManager.ts
var import_obsidian = require("obsidian");
var CopyManager = class {
  static cleanupHtml(html) {
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = html;
    tempDiv.querySelectorAll("*").forEach((el) => {
      Array.from(el.attributes).forEach((attr) => {
        if (attr.name.startsWith("data-")) {
          el.removeAttribute(attr.name);
        }
      });
    });
    tempDiv.querySelectorAll("*").forEach((el) => {
      el.removeAttribute("class");
    });
    tempDiv.querySelectorAll("*").forEach((el) => {
      el.removeAttribute("id");
    });
    return tempDiv.innerHTML;
  }
  static processImages(container) {
    return __async(this, null, function* () {
      const images = container.querySelectorAll("img");
      const imageArray = Array.from(images);
      for (const img of imageArray) {
        try {
          const response = yield fetch(img.src);
          const blob = yield response.blob();
          const reader = new FileReader();
          yield new Promise((resolve, reject) => {
            reader.onload = () => {
              img.src = reader.result;
              resolve(null);
            };
            reader.onerror = reject;
            reader.readAsDataURL(blob);
          });
        } catch (error) {
          console.error("\u56FE\u7247\u8F6C\u6362\u5931\u8D25:", error);
        }
      }
    });
  }
  static copyToClipboard(element) {
    return __async(this, null, function* () {
      try {
        const container = document.createElement("div");
        container.style.position = "absolute";
        container.style.left = "-9999px";
        container.innerHTML = element.innerHTML;
        document.body.appendChild(container);
        yield this.processImages(container);
        const cleanHtml = this.cleanupHtml(container.innerHTML);
        const clipData = new ClipboardItem({
          "text/html": new Blob([cleanHtml], { type: "text/html" }),
          "text/plain": new Blob([container.textContent || ""], { type: "text/plain" })
        });
        document.body.removeChild(container);
        yield navigator.clipboard.write([clipData]);
        new import_obsidian.Notice("\u5DF2\u590D\u5236\u5230\u526A\u8D34\u677F");
      } catch (error) {
        new import_obsidian.Notice("\u590D\u5236\u5931\u8D25");
      }
    });
  }
};

// src/donateManager.ts
var DonateManager = class {
  static initialize(app, plugin) {
    this.app = app;
    this.plugin = plugin;
  }
  static showDonateModal(container) {
    this.overlay = container.createEl("div", {
      cls: "mp-donate-overlay"
    });
    this.modal = this.overlay.createEl("div", {
      cls: "mp-about-modal"
    });
    const closeButton = this.modal.createEl("button", {
      cls: "mp-donate-close",
      text: "\xD7"
    });
    const authorSection = this.modal.createEl("div", {
      cls: "mp-about-section mp-about-intro-section"
    });
    authorSection.createEl("h4", {
      text: "\u5173\u4E8E\u4F5C\u8005",
      cls: "mp-about-title"
    });
    const introEl = authorSection.createEl("p", {
      cls: "mp-about-intro"
    });
    introEl.innerHTML = '\u4F60\u597D\uFF0C\u6211\u662F<span class="mp-about-name">\u3010\u591C\u534A\u3011</span>\uFF0C\u4E00\u540D<span class="mp-about-identity">\u5168\u804C\u5199\u4F5C\u4E0E\u72EC\u7ACB\u5F00\u53D1\u8005</span>\u3002';
    const roleList = authorSection.createEl("div", {
      cls: "mp-about-roles"
    });
    const roleEl = roleList.createEl("p", {
      cls: "mp-about-role"
    });
    roleEl.innerHTML = `\u8FD9\u6B3E\u63D2\u4EF6\u662F\u6211\u4E3A\u4E86\u5728 Obsidian \u5199\u4F5C\u540E\uFF0C<br>
                            \u65E0\u9700\u7E41\u7410\u6392\u7248\u4E00\u952E\u5373\u53EF\u53D1\u5E03\u5230\u516C\u4F17\u53F7\u800C\u5F00\u53D1\u7684\u5DE5\u5177\uFF0C<br>
                            \u5E0C\u671B\u80FD\u8BA9\u4F60\u7684<span class="mp-about-highlight">\u6392\u7248\u66F4\u8F7B\u677E</span>\uFF0C
                            \u8BA9\u4F60\u7684<span class="mp-about-value">\u521B\u4F5C\u66F4\u9AD8\u6548</span>\u3002`;
    const descEl = authorSection.createEl("p", {
      cls: "mp-about-desc"
    });
    descEl.innerHTML = `\u5982\u679C\u8FD9\u6B3E\u63D2\u4EF6\u5BF9\u4F60\u6709\u5E2E\u52A9\uFF0C<br>\u6216\u8005\u4F60\u613F\u610F\u652F\u6301\u6211\u7684\u72EC\u7ACB\u5F00\u53D1\u4E0E\u5199\u4F5C\uFF0C\u6B22\u8FCE\u8BF7\u6211\u559D\u5496\u5561\u2615\uFE0F\u3002<br>
                            \u4F60\u7684\u652F\u6301\u5BF9\u6211\u6765\u8BF4\u610F\u4E49\u91CD\u5927\uFF0C\u5B83\u80FD\u8BA9\u6211\u66F4\u4E13\u6CE8\u5730\u5F00\u53D1\u3001\u5199\u4F5C\u3002`;
    const donateSection = this.modal.createEl("div", {
      cls: "mp-about-section mp-about-donate-section"
    });
    donateSection.createEl("h4", {
      text: "\u8BF7\u6211\u559D\u5496\u5561",
      cls: "mp-about-subtitle"
    });
    const donateQR = donateSection.createEl("div", {
      cls: "mp-about-qr"
    });
    donateQR.createEl("img", {
      attr: {
        src: this.app.vault.adapter.getResourcePath(`${this.plugin.manifest.dir}/assets/donate.png`),
        alt: "\u6253\u8D4F\u4E8C\u7EF4\u7801"
      }
    });
    const mpSection = this.modal.createEl("div", {
      cls: "mp-about-section mp-about-mp-section"
    });
    const mpDescEl = mpSection.createEl("p", {
      cls: "mp-about-desc"
    });
    mpDescEl.innerHTML = `\u5982\u679C\u4F60\u60F3\u4E86\u89E3\u66F4\u591A\u5173\u4E8E\u521B\u4F5C\u3001\u6548\u7387\u5DE5\u5177\u7684\u5C0F\u6280\u5DE7\uFF0C<br>
                              \u6216\u8005\u5173\u6CE8\u6211\u672A\u6765\u7684\u5199\u4F5C\u52A8\u6001\uFF0C\u6B22\u8FCE\u5173\u6CE8\u6211\u7684\u5FAE\u4FE1\u516C\u4F17\u53F7\u3002`;
    mpSection.createEl("h4", {
      text: "\u5FAE\u4FE1\u516C\u4F17\u53F7",
      cls: "mp-about-subtitle"
    });
    const mpQR = mpSection.createEl("div", {
      cls: "mp-about-qr"
    });
    mpQR.createEl("img", {
      attr: {
        src: this.app.vault.adapter.getResourcePath(`${this.plugin.manifest.dir}/assets/qrcode.png`),
        alt: "\u516C\u4F17\u53F7\u4E8C\u7EF4\u7801"
      }
    });
    const footerEl = mpSection.createEl("p", {
      cls: "mp-about-footer"
    });
    footerEl.innerHTML = "\u671F\u5F85\u4E0E\u4F60\u4E00\u8D77\uFF0C\u5728\u521B\u4F5C\u7684\u4E16\u754C\u91CC<strong>\u627E\u5230\u5C5E\u4E8E\u81EA\u5DF1\u7684\u610F\u4E49</strong>\u3002";
    closeButton.addEventListener("click", () => this.closeDonateModal());
    this.overlay.addEventListener("click", (e) => {
      if (e.target === this.overlay) {
        this.closeDonateModal();
      }
    });
  }
  static closeDonateModal() {
    if (this.overlay) {
      this.overlay.remove();
    }
  }
};

// src/backgrounds/index.ts
var backgrounds = {
  backgrounds: [
    {
      id: "grid",
      name: "\u7F51\u683C",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: linear-gradient(90deg, rgba(50, 0, 0, 0.03) 2%, rgba(0, 0, 0, 0) 2%), linear-gradient(360deg, rgba(50, 0, 0, 0.03) 2%, rgba(0, 0, 0, 0) 2%); background-size: 20px 20px; background-position: center center;"
    },
    {
      id: "crosshatch",
      name: "\u4EA4\u53C9",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: repeating-linear-gradient(45deg, rgba(50, 0, 0, 0.02) 0, rgba(50, 0, 0, 0.02) 1px, transparent 1px, transparent 50%), repeating-linear-gradient(-45deg, rgba(50, 0, 0, 0.02) 0, rgba(50, 0, 0, 0.02) 1px, transparent 1px, transparent 50%); background-size: 20px 20px;"
    },
    {
      id: "dots",
      name: "\u5706\u70B9",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: radial-gradient(rgba(50, 0, 0, 0.03) 1px, transparent 1px); background-size: 20px 20px; background-position: center center;"
    },
    {
      id: "dash",
      name: "\u865A\u7EBF",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: linear-gradient(90deg, rgba(50, 0, 0, 0.03) 50%, transparent 50%); background-size: 8px 1px; background-position: center center;"
    },
    {
      id: "wave",
      name: "\u6CE2\u6D6A",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: linear-gradient(45deg, rgba(50, 0, 0, 0.04) 12%, transparent 12%, transparent 88%, rgba(50, 0, 0, 0.04) 88%), linear-gradient(135deg, rgba(50, 0, 0, 0.04) 12%, transparent 12%, transparent 88%, rgba(50, 0, 0, 0.04) 88%), linear-gradient(45deg, rgba(50, 0, 0, 0.04) 12%, transparent 12%, transparent 88%, rgba(50, 0, 0, 0.04) 88%), linear-gradient(135deg, rgba(50, 0, 0, 0.04) 12%, transparent 12%, transparent 88%, rgba(50, 0, 0, 0.04) 88%); background-size: 30px 30px; background-position: 0 0, 0 0, 15px 15px, 15px 15px;"
    },
    {
      id: "checkerboard",
      name: "\u68CB\u76D8",
      style: "box-sizing: border-box; margin: 0; padding: 0; background-color: white; background-image: linear-gradient(45deg, rgba(50, 0, 0, 0.04) 25%, transparent 25%), linear-gradient(-45deg, rgba(50, 0, 0, 0.04) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(50, 0, 0, 0.04) 75%), linear-gradient(-45deg, transparent 75%, rgba(50, 0, 0, 0.04) 75%); background-size: 20px 20px; background-position: 0 0, 0 10px, 10px -10px, -10px 0px;"
    }
  ]
};

// src/backgroundManager.ts
var BackgroundManager = class {
  constructor() {
    this.currentBackground = null;
    this.backgrounds = backgrounds.backgrounds;
  }
  getAllBackgrounds() {
    return this.backgrounds;
  }
  setBackground(id) {
    if (!id) {
      this.currentBackground = null;
      return;
    }
    const background = this.backgrounds.find((bg) => bg.id === id);
    if (background) {
      this.currentBackground = background;
    }
  }
  applyBackground(element) {
    const section = element.querySelector(".mp-content-section");
    if (section) {
      if (!this.currentBackground) {
        section.setAttribute("style", "");
        return;
      }
      section.setAttribute("style", this.currentBackground.style);
    }
  }
};

// src/view.ts
var VIEW_TYPE_MP = "mp-preview";
var MPView = class extends import_obsidian2.ItemView {
  constructor(leaf, templateManager, settingsManager) {
    super(leaf);
    this.currentFile = null;
    this.updateTimer = null;
    this.isPreviewLocked = false;
    this.templateManager = templateManager;
    this.settingsManager = settingsManager;
    this.backgroundManager = new BackgroundManager();
  }
  getViewType() {
    return VIEW_TYPE_MP;
  }
  getDisplayText() {
    return "\u516C\u4F17\u53F7\u9884\u89C8";
  }
  getIcon() {
    return "eye";
  }
  // 在 onOpen 方法中更新底部锁定按钮的创建
  onOpen() {
    return __async(this, null, function* () {
      var _a, _b, _c, _d, _e, _f, _g;
      const container = this.containerEl.children[1];
      container.empty();
      const toolbar = container.createEl("div", { cls: "mp-toolbar" });
      this.lockButton = toolbar.createEl("button", {
        cls: "mp-lock-button",
        attr: { "aria-label": "\u5173\u95ED\u5B9E\u65F6\u9884\u89C8\u72B6\u6001" }
      });
      this.lockButton.innerHTML = "\u{1F513}";
      this.lockButton.addEventListener("click", () => this.togglePreviewLock());
      const controlsGroup = toolbar.createEl("div", { cls: "mp-controls-group" });
      const backgroundOptions = [
        { value: "", label: "\u65E0\u80CC\u666F" },
        ...((_a = this.backgroundManager.getAllBackgrounds()) == null ? void 0 : _a.map((bg) => ({
          value: bg.id,
          label: bg.name
        }))) || []
      ];
      this.customBackgroundSelect = this.createCustomSelect(
        controlsGroup,
        "mp-background-select",
        backgroundOptions
      );
      (_b = this.customBackgroundSelect.querySelector(".custom-select")) == null ? void 0 : _b.addEventListener("change", (e) => __async(this, null, function* () {
        const value = e.detail.value;
        this.backgroundManager.setBackground(value);
        yield this.settingsManager.updateSettings({
          backgroundId: value
        });
        this.backgroundManager.applyBackground(this.previewEl);
      }));
      this.customTemplateSelect = this.createCustomSelect(
        controlsGroup,
        "mp-template-select",
        yield this.getTemplateOptions()
      );
      this.customTemplateSelect.id = "template-select";
      (_c = this.customTemplateSelect.querySelector(".custom-select")) == null ? void 0 : _c.addEventListener("change", (e) => __async(this, null, function* () {
        const value = e.detail.value;
        this.templateManager.setCurrentTemplate(value);
        yield this.settingsManager.updateSettings({
          templateId: value
        });
        this.templateManager.applyTemplate(this.previewEl);
      }));
      this.customFontSelect = this.createCustomSelect(
        controlsGroup,
        "mp-font-select",
        this.getFontOptions()
      );
      (_d = this.customFontSelect.querySelector(".custom-select")) == null ? void 0 : _d.addEventListener("change", (e) => __async(this, null, function* () {
        const value = e.detail.value;
        this.templateManager.setFont(value);
        yield this.settingsManager.updateSettings({
          fontFamily: value
        });
        this.templateManager.applyTemplate(this.previewEl);
      }));
      this.customFontSelect.id = "font-select";
      const fontSizeGroup = controlsGroup.createEl("div", { cls: "mp-font-size-group" });
      const decreaseButton = fontSizeGroup.createEl("button", {
        cls: "mp-font-size-btn",
        text: "-"
      });
      this.fontSizeSelect = fontSizeGroup.createEl("input", {
        cls: "mp-font-size-input",
        type: "text",
        value: "16",
        attr: {
          style: "border: none; outline: none; background: transparent;"
        }
      });
      const increaseButton = fontSizeGroup.createEl("button", {
        cls: "mp-font-size-btn",
        text: "+"
      });
      const settings = this.settingsManager.getSettings();
      if (settings.backgroundId) {
        const backgroundSelect = this.customBackgroundSelect.querySelector(".selected-text");
        const backgroundDropdown = this.customBackgroundSelect.querySelector(".select-dropdown");
        if (backgroundSelect && backgroundDropdown) {
          const option = backgroundOptions.find((o) => o.value === settings.backgroundId);
          if (option) {
            backgroundSelect.textContent = option.label;
            (_e = this.customBackgroundSelect.querySelector(".custom-select")) == null ? void 0 : _e.setAttribute("data-value", option.value);
            backgroundDropdown.querySelectorAll(".select-item").forEach((el) => {
              if (el.getAttribute("data-value") === option.value) {
                el.classList.add("selected");
              } else {
                el.classList.remove("selected");
              }
            });
          }
        }
        this.backgroundManager.setBackground(settings.backgroundId);
      }
      if (settings.templateId) {
        const templateSelect = this.customTemplateSelect.querySelector(".selected-text");
        const templateDropdown = this.customTemplateSelect.querySelector(".select-dropdown");
        if (templateSelect && templateDropdown) {
          const option = yield this.getTemplateOptions();
          const selected = option.find((o) => o.value === settings.templateId);
          if (selected) {
            templateSelect.textContent = selected.label;
            (_f = this.customTemplateSelect.querySelector(".custom-select")) == null ? void 0 : _f.setAttribute("data-value", selected.value);
            templateDropdown.querySelectorAll(".select-item").forEach((el) => {
              if (el.getAttribute("data-value") === selected.value) {
                el.classList.add("selected");
              } else {
                el.classList.remove("selected");
              }
            });
          }
        }
        this.templateManager.setCurrentTemplate(settings.templateId);
      }
      if (settings.fontFamily) {
        const fontSelect = this.customFontSelect.querySelector(".selected-text");
        const fontDropdown = this.customFontSelect.querySelector(".select-dropdown");
        if (fontSelect && fontDropdown) {
          const option = this.getFontOptions();
          const selected = option.find((o) => o.value === settings.fontFamily);
          if (selected) {
            fontSelect.textContent = selected.label;
            (_g = this.customFontSelect.querySelector(".custom-select")) == null ? void 0 : _g.setAttribute("data-value", selected.value);
            fontDropdown.querySelectorAll(".select-item").forEach((el) => {
              if (el.getAttribute("data-value") === selected.value) {
                el.classList.add("selected");
              } else {
                el.classList.remove("selected");
              }
            });
          }
        }
        this.templateManager.setFont(settings.fontFamily);
      }
      if (settings.fontSize) {
        this.fontSizeSelect.value = settings.fontSize.toString();
        this.templateManager.setFontSize(settings.fontSize);
      }
      const updateFontSize = () => __async(this, null, function* () {
        const size = parseInt(this.fontSizeSelect.value);
        this.templateManager.setFontSize(size);
        yield this.settingsManager.updateSettings({
          fontSize: size
        });
        this.templateManager.applyTemplate(this.previewEl);
      });
      decreaseButton.addEventListener("click", () => {
        const currentSize = parseInt(this.fontSizeSelect.value);
        if (currentSize > 12) {
          this.fontSizeSelect.value = (currentSize - 1).toString();
          updateFontSize();
        }
      });
      increaseButton.addEventListener("click", () => {
        const currentSize = parseInt(this.fontSizeSelect.value);
        if (currentSize < 30) {
          this.fontSizeSelect.value = (currentSize + 1).toString();
          updateFontSize();
        }
      });
      this.fontSizeSelect.addEventListener("change", updateFontSize);
      this.previewEl = container.createEl("div", { cls: "mp-preview-area" });
      const bottomBar = container.createEl("div", { cls: "mp-bottom-bar" });
      const helpButton = bottomBar.createEl("button", {
        cls: "mp-help-button",
        attr: { "aria-label": "\u4F7F\u7528\u6307\u5357" }
      });
      helpButton.innerHTML = "\u2753";
      const tooltip = bottomBar.createEl("div", {
        cls: "mp-help-tooltip",
        text: `\u4F7F\u7528\u6307\u5357\uFF1A
                1. \u9009\u62E9\u559C\u6B22\u7684\u4E3B\u9898\u6A21\u677F
                2. \u8C03\u6574\u5B57\u4F53\u548C\u5B57\u53F7
                3. \u5B9E\u65F6\u9884\u89C8\u6548\u679C
                4. \u70B9\u51FB\u3010\u590D\u5236\u6309\u94AE\u3011\u5373\u53EF\u7C98\u8D34\u5230\u516C\u4F17\u53F7
                5. \u7F16\u8F91\u5B9E\u65F6\u67E5\u770B\u6548\u679C\uFF0C\u70B9\u{1F513}\u5173\u95ED\u5B9E\u65F6\u5237\u65B0
                6. \u5982\u679C\u4F60\u559C\u6B22\u8FD9\u4E2A\u63D2\u4EF6\uFF0C\u6B22\u8FCE\u5173\u6CE8\u6253\u8D4F`
      });
      const bottomControlsGroup = bottomBar.createEl("div", { cls: "mp-bottom-controls-group" });
      const likeButton = bottomControlsGroup.createEl("button", {
        cls: "mp-like-button"
      });
      likeButton.innerHTML = '<span style="margin-right: 4px">\u2764\uFE0F</span>\u5173\u4E8E\u4F5C\u8005';
      likeButton.addEventListener("click", () => {
        DonateManager.showDonateModal(this.containerEl);
      });
      this.copyButton = bottomControlsGroup.createEl("button", {
        text: "\u590D\u5236\u4E3A\u516C\u4F17\u53F7\u683C\u5F0F",
        cls: "mp-copy-button"
      });
      const newButton = bottomControlsGroup.createEl("button", {
        text: "\u656C\u8BF7\u671F\u5F85",
        cls: "mp-new-button"
      });
      this.copyButton.addEventListener("click", () => __async(this, null, function* () {
        if (this.previewEl) {
          this.copyButton.disabled = true;
          this.copyButton.setText("\u590D\u5236\u4E2D...");
          try {
            yield CopyManager.copyToClipboard(this.previewEl);
            this.copyButton.setText("\u590D\u5236\u6210\u529F");
            setTimeout(() => {
              this.copyButton.disabled = false;
              this.copyButton.setText("\u590D\u5236\u4E3A\u516C\u4F17\u53F7\u683C\u5F0F");
            }, 2e3);
          } catch (error) {
            this.copyButton.setText("\u590D\u5236\u5931\u8D25");
            setTimeout(() => {
              this.copyButton.disabled = false;
              this.copyButton.setText("\u590D\u5236\u4E3A\u516C\u4F17\u53F7\u683C\u5F0F");
            }, 2e3);
          }
        }
      }));
      this.registerEvent(
        this.app.workspace.on("file-open", this.onFileOpen.bind(this))
      );
      this.registerEvent(
        this.app.vault.on("modify", this.onFileModify.bind(this))
      );
      const currentFile = this.app.workspace.getActiveFile();
      yield this.onFileOpen(currentFile);
    });
  }
  updateControlsState(enabled) {
    this.lockButton.disabled = !enabled;
    const templateSelect = this.customTemplateSelect.querySelector(".custom-select");
    const fontSelect = this.customFontSelect.querySelector(".custom-select");
    if (templateSelect) {
      templateSelect.classList.toggle("disabled", !enabled);
      templateSelect.setAttribute("style", `pointer-events: ${enabled ? "auto" : "none"}`);
    }
    if (fontSelect) {
      fontSelect.classList.toggle("disabled", !enabled);
      fontSelect.setAttribute("style", `pointer-events: ${enabled ? "auto" : "none"}`);
    }
    this.fontSizeSelect.disabled = !enabled;
    this.copyButton.disabled = !enabled;
    const fontSizeButtons = this.containerEl.querySelectorAll(".mp-font-size-btn");
    fontSizeButtons.forEach((button) => {
      button.disabled = !enabled;
    });
  }
  onFileOpen(file) {
    return __async(this, null, function* () {
      this.currentFile = file;
      if (!file || file.extension !== "md") {
        this.previewEl.empty();
        this.previewEl.createEl("div", {
          text: "\u53EA\u80FD\u9884\u89C8 Markdown \u6587\u672C\u6587\u6863",
          cls: "mp-empty-message"
        });
        this.updateControlsState(false);
        return;
      }
      this.updateControlsState(true);
      this.isPreviewLocked = false;
      this.lockButton.innerHTML = "\u{1F513}";
      yield this.updatePreview();
    });
  }
  togglePreviewLock() {
    return __async(this, null, function* () {
      this.isPreviewLocked = !this.isPreviewLocked;
      const lockIcon = this.isPreviewLocked ? "\u{1F512}" : "\u{1F513}";
      const lockStatus = this.isPreviewLocked ? "\u5F00\u542F\u5B9E\u65F6\u9884\u89C8\u72B6\u6001" : "\u5173\u95ED\u5B9E\u65F6\u9884\u89C8\u72B6\u6001";
      this.lockButton.innerHTML = lockIcon;
      this.lockButton.setAttribute("aria-label", lockStatus);
      if (!this.isPreviewLocked) {
        yield this.updatePreview();
      }
    });
  }
  onFileModify(file) {
    return __async(this, null, function* () {
      if (file === this.currentFile && !this.isPreviewLocked) {
        if (this.updateTimer) {
          clearTimeout(this.updateTimer);
        }
        this.updateTimer = setTimeout(() => {
          this.updatePreview();
        }, 500);
      }
    });
  }
  updatePreview() {
    return __async(this, null, function* () {
      if (!this.currentFile)
        return;
      const scrollPosition = this.previewEl.scrollTop;
      const prevHeight = this.previewEl.scrollHeight;
      const isAtBottom = this.previewEl.scrollHeight - this.previewEl.scrollTop <= this.previewEl.clientHeight + 100;
      this.previewEl.empty();
      const content = yield this.app.vault.read(this.currentFile);
      yield import_obsidian2.MarkdownRenderer.renderMarkdown(
        content,
        this.previewEl,
        this.currentFile.path,
        this
      );
      MPConverter.formatContent(this.previewEl);
      this.templateManager.applyTemplate(this.previewEl);
      this.backgroundManager.applyBackground(this.previewEl);
      if (isAtBottom) {
        requestAnimationFrame(() => {
          this.previewEl.scrollTop = this.previewEl.scrollHeight;
        });
      } else {
        const heightDiff = this.previewEl.scrollHeight - prevHeight;
        this.previewEl.scrollTop = scrollPosition + heightDiff;
      }
    });
  }
  // 添加自定义下拉选择器创建方法
  createCustomSelect(parent, className, options) {
    var _a;
    const container = parent.createEl("div", { cls: "custom-select-container" });
    const select = container.createEl("div", { cls: "custom-select" });
    const selectedText = select.createEl("span", { cls: "selected-text" });
    const arrow = select.createEl("span", { cls: "select-arrow", text: "\u25BE" });
    const dropdown = container.createEl("div", { cls: "select-dropdown" });
    options.forEach((option) => {
      const item = dropdown.createEl("div", {
        cls: "select-item",
        text: option.label
      });
      item.dataset.value = option.value;
      item.addEventListener("click", () => {
        dropdown.querySelectorAll(".select-item").forEach((el) => el.classList.remove("selected"));
        item.classList.add("selected");
        selectedText.textContent = option.label;
        select.dataset.value = option.value;
        dropdown.classList.remove("show");
        select.dispatchEvent(new CustomEvent("change", {
          detail: { value: option.value }
        }));
      });
    });
    if (options.length > 0) {
      selectedText.textContent = options[0].label;
      select.dataset.value = options[0].value;
      (_a = dropdown.querySelector(".select-item")) == null ? void 0 : _a.classList.add("selected");
    }
    select.addEventListener("click", (e) => {
      e.stopPropagation();
      dropdown.classList.toggle("show");
    });
    document.addEventListener("click", () => {
      dropdown.classList.remove("show");
    });
    return container;
  }
  // 获取模板选项
  getTemplateOptions() {
    return __async(this, null, function* () {
      yield this.templateManager.loadTemplates();
      const templates2 = this.templateManager.getAllTemplates();
      return templates2.length > 0 ? templates2.map((t) => ({ value: t.id, label: t.name })) : [{ value: "default", label: "\u9ED8\u8BA4\u6A21\u677F" }];
    });
  }
  // 获取字体选项
  getFontOptions() {
    return [
      {
        value: 'Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, "PingFang SC", Cambria, Cochin, Georgia, Times, "Times New Roman", serif',
        label: "\u9ED8\u8BA4\u5B57\u4F53"
      },
      {
        value: 'SimSun, "\u5B8B\u4F53", serif',
        label: "\u5B8B\u4F53"
      },
      {
        value: 'SimHei, "\u9ED1\u4F53", sans-serif',
        label: "\u9ED1\u4F53"
      },
      {
        value: 'KaiTi, "\u6977\u4F53", serif',
        label: "\u6977\u4F53"
      },
      {
        value: '"Microsoft YaHei", "\u5FAE\u8F6F\u96C5\u9ED1", sans-serif',
        label: "\u96C5\u9ED1"
      }
    ];
  }
};

// src/templates/index.ts
var defaultTemplate = require_default();
var minimalTemplate = require_minimal();
var scarletTemplate = require_scarlet();
var orangeTemplate = require_orange();
var elegantTemplate = require_elegant();
var darkTemplate = require_dark();
var academicTemplate = require_academic();
var yebanTemplate = require_yeban();
var yebanOrangeTemplate = require_yeban_orange();
var yebanScarletTemplate = require_yeban_scarlet();
var yebanNavyTemplate = require_yeban_navy();
var darkgreenTemplate = require_darkgreen();
var templates = {
  default: defaultTemplate,
  minimal: minimalTemplate,
  scarlet: scarletTemplate,
  orange: orangeTemplate,
  elegant: elegantTemplate,
  dark: darkTemplate,
  academic: academicTemplate,
  yeban: yebanTemplate,
  "yeban-orange": yebanOrangeTemplate,
  "yeban-scarlet": yebanScarletTemplate,
  "yeban-navy": yebanNavyTemplate,
  darkgreen: darkgreenTemplate
};

// src/templateManager.ts
var TemplateManager = class {
  constructor(app) {
    this.templates = /* @__PURE__ */ new Map();
    this.currentFont = "-apple-system";
    this.currentFontSize = 16;
    this.app = app;
    this.loadTemplates();
  }
  loadTemplates() {
    return __async(this, null, function* () {
      try {
        Object.values(templates).forEach((template) => {
          this.templates.set(template.id, template);
          if (template.id === "default") {
            this.currentTemplate = template;
          }
        });
      } catch (error) {
        console.error("\u52A0\u8F7D\u6A21\u677F\u5931\u8D25:", error);
        throw new Error("\u65E0\u6CD5\u52A0\u8F7D\u6A21\u677F\u6587\u4EF6");
      }
    });
  }
  getTemplate(id) {
    return this.templates.get(id);
  }
  getCurrentTemplate() {
    return this.currentTemplate;
  }
  setCurrentTemplate(id) {
    const template = this.templates.get(id);
    if (template) {
      this.currentTemplate = template;
      return true;
    }
    return false;
  }
  getAllTemplates() {
    return Array.from(this.templates.values());
  }
  setFont(fontFamily) {
    this.currentFont = fontFamily;
  }
  setFontSize(size) {
    this.currentFontSize = size;
  }
  applyTemplate(element) {
    const styles = this.currentTemplate.styles;
    element.style.cssText = `
            word-break: break-all;
            line-height: 1.7;
            overflow-wrap: break-word;
            white-space: normal;
            border: none;
            ${styles.container}
        `;
    ["h1", "h2", "h3", "h4", "h5", "h6"].forEach((tag) => {
      element.querySelectorAll(tag).forEach((el) => {
        var _a, _b;
        if (!el.querySelector(".content")) {
          const content = document.createElement("span");
          content.className = "content";
          content.innerHTML = el.innerHTML;
          el.innerHTML = "";
          el.appendChild(content);
          const after = document.createElement("span");
          after.className = "after";
          el.appendChild(after);
        }
        const styleKey = tag === "h4" || tag === "h5" || tag === "h6" ? "base" : tag;
        const titleStyle = styles.title[styleKey];
        el.setAttribute("style", `${titleStyle.base}; font-family: ${this.currentFont};`);
        (_a = el.querySelector(".content")) == null ? void 0 : _a.setAttribute("style", titleStyle.content);
        (_b = el.querySelector(".after")) == null ? void 0 : _b.setAttribute("style", titleStyle.after);
      });
    });
    element.querySelectorAll("p").forEach((el) => {
      var _a, _b;
      if (!((_a = el.parentElement) == null ? void 0 : _a.closest("p")) && !((_b = el.parentElement) == null ? void 0 : _b.closest("blockquote"))) {
        el.setAttribute("style", `${styles.paragraph}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
      }
    });
    element.querySelectorAll("ul, ol").forEach((el) => {
      el.setAttribute("style", styles.list.container);
    });
    element.querySelectorAll("li").forEach((el) => {
      el.setAttribute("style", `${styles.list.item}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll(".task-list-item").forEach((el) => {
      el.setAttribute("style", `${styles.list.taskList}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("blockquote").forEach((el) => {
      el.setAttribute("style", `${styles.quote}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("pre").forEach((el) => {
      el.setAttribute("style", `${styles.code.block}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("code:not(pre code)").forEach((el) => {
      el.setAttribute("style", `${styles.code.inline}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("a").forEach((el) => {
      el.setAttribute("style", styles.link);
    });
    element.querySelectorAll("strong").forEach((el) => {
      el.setAttribute("style", styles.emphasis.strong);
    });
    element.querySelectorAll("em").forEach((el) => {
      el.setAttribute("style", styles.emphasis.em);
    });
    element.querySelectorAll("del").forEach((el) => {
      el.setAttribute("style", styles.emphasis.del);
    });
    element.querySelectorAll("table").forEach((el) => {
      el.setAttribute("style", styles.table.container);
    });
    element.querySelectorAll("th").forEach((el) => {
      el.setAttribute("style", `${styles.table.header}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("td").forEach((el) => {
      el.setAttribute("style", `${styles.table.cell}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
    element.querySelectorAll("hr").forEach((el) => {
      el.setAttribute("style", styles.hr);
    });
    element.querySelectorAll(".footnote-ref").forEach((el) => {
      el.setAttribute("style", styles.footnote.ref);
    });
    element.querySelectorAll(".footnote-backref").forEach((el) => {
      el.setAttribute("style", styles.footnote.backref);
    });
    element.querySelectorAll("img").forEach((el) => {
      const img = el;
      el.setAttribute("style", `${styles.image}; font-family: ${this.currentFont};`);
      const parent = img.parentElement;
      if (parent && parent.tagName.toLowerCase() === "p") {
        if (parent.childNodes.length === 1) {
          parent.style.textAlign = "center";
          parent.style.margin = "1em 0";
        }
      }
    });
    element.querySelectorAll("pre").forEach((el) => {
      el.setAttribute("style", `${styles.code.block};`);
    });
    element.querySelectorAll("blockquote").forEach((el) => {
      el.setAttribute("style", `${styles.quote};`);
    });
    element.querySelectorAll("ul, ol").forEach((el) => {
      el.setAttribute("style", `${styles.list.container}; font-family: ${this.currentFont};`);
    });
    element.querySelectorAll("li").forEach((el) => {
      el.setAttribute("style", `${styles.list.item}; font-family: ${this.currentFont}; font-size: ${this.currentFontSize}px;`);
    });
  }
};

// src/settings.ts
var DEFAULT_SETTINGS = {
  templateId: "default",
  fontFamily: "-apple-system",
  fontSize: 16,
  backgroundId: ""
};
var SettingsManager = class {
  constructor(plugin) {
    this.plugin = plugin;
    this.settings = DEFAULT_SETTINGS;
  }
  loadSettings() {
    return __async(this, null, function* () {
      this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.plugin.loadData());
    });
  }
  saveSettings() {
    return __async(this, null, function* () {
      yield this.plugin.saveData(this.settings);
    });
  }
  getSettings() {
    return this.settings;
  }
  updateSettings(settings) {
    return __async(this, null, function* () {
      this.settings = __spreadValues(__spreadValues({}, this.settings), settings);
      yield this.saveSettings();
    });
  }
};

// src/main.ts
var MPPlugin = class extends import_obsidian3.Plugin {
  onload() {
    return __async(this, null, function* () {
      this.settingsManager = new SettingsManager(this);
      yield this.settingsManager.loadSettings();
      const templateManager = new TemplateManager(this.app);
      MPConverter.initialize(this.app);
      DonateManager.initialize(this.app, this);
      this.registerView(
        VIEW_TYPE_MP,
        (leaf) => new MPView(leaf, templateManager, this.settingsManager)
      );
      this.addCommand({
        id: "open-mp-preview",
        name: "\u6253\u5F00\u516C\u4F17\u53F7\u9884\u89C8\u63D2\u4EF6",
        callback: () => __async(this, null, function* () {
          yield this.activateView();
        })
      });
    });
  }
  onunload() {
    return __async(this, null, function* () {
      this.app.workspace.detachLeavesOfType(VIEW_TYPE_MP);
    });
  }
  activateView() {
    return __async(this, null, function* () {
      const leaves = this.app.workspace.getLeavesOfType(VIEW_TYPE_MP);
      if (leaves.length > 0) {
        this.app.workspace.revealLeaf(leaves[0]);
        return;
      }
      const rightLeaf = this.app.workspace.getRightLeaf(false);
      if (rightLeaf) {
        yield rightLeaf.setViewState({
          type: VIEW_TYPE_MP,
          active: true
        });
      } else {
        new import_obsidian3.Notice("\u65E0\u6CD5\u521B\u5EFA\u89C6\u56FE\u9762\u677F");
      }
    });
  }
};
//# sourceMappingURL=data:application/json;base64,
